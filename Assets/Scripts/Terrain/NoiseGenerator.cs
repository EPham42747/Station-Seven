using UnityEngine;

public static class NoiseGenerator {
    /// <summary>
    /// Generates a 2D array of float values corresponding to a Perlin noise map.
    /// Can be customized with <c>frequency</c>, <c>amplitude</c>, <c>flatnessThreshold</c>, and <c>sharpness</c> parameters.
    /// </summary>
    /// <param name="width">The number of vertices in the x-direction.</param>
    /// <param name="height">The number of vertices in the z-direction.</param>
    /// <param name="frequency">The frequency of the underlying Perlin noise. Should be positive and non-zero.</param>
    /// <param name="sharpness">The number to raise floats to. Smaller values will be pulled closer to 0. Should be positive and non-zero.</param>
    /// <returns>A 2D array of floats generated by Perlin noise.</returns>
    public static float[,] GenerateNoise(int width, int height, float frequency = 1f, float sharpness = 1f) {
        if (frequency <= 0f) frequency = 0.001f;
        if (sharpness <= 0f) sharpness = 0.001f;

        // float offset = Random.Range(-1000f, 1000f);
        float offset = 0f;
        float[,] ret = new float[width, height];

        for (int i = 0; i < width; i++) {
            for (int j = 0; j < height; j++)
                ret[i, j] = Mathf.Pow(Mathf.PerlinNoise(i * frequency + offset, j * frequency + offset), sharpness);
        }

        return ret;
    }
}
